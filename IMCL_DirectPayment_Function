function GetRef(){
    try {

        SYS_GetCECustRefNo("SetRef");

    } catch (e) {
       showExcpt("IMCL_DirectPayment_Function", e);
    }
}

function SetRef(Ref){
    try {
		var BranchCode = getFldValue("HOME_BRANCH_CODE");
		setFldValue("ORGN_BR_CODE",BranchCode);
		setFldValue("PROC_BR_CODE",BranchCode);
		SYS_GetCUBK("EmailTo","PROC_BR_CODE");
		var t=sessionStorage.getItem("tempName");
	 	if (BranchCode != "" && getFldValue("C_MAIN_REF") == "")
	
		{
			var TodayDate = new Date();
			var strDate = convDtObjToStr(TodayDate);
			var Year = strDate.substr(8,4);
			Ref = BranchCode + Year + SYS_CHILD_UNIT + Ref;
		
			setFldValue("C_MAIN_REF",Ref);
			setFldValue("CUST_REF",Ref);
		}
			sessionStorage.setItem("tempName","");
    } catch (e) {
        showExcpt("IMCL_DirectPayment_Function", e);
    }
}

function checkCustomValidations()
{
	setEmailSubject();
	return true;
}





function getCPCEmail()
{
	try{	
		setFldValue("EMAIL_TEMP",getFldValue("EMAIL_SUBJECT"));
		SYS_GetCUBK("EmailTo","CPC_CODE");
		setTimeout("setEmail()",575);
	}
	catch(e){
		showExcpt("IMCL_DirectPayment_Function", e);
	}
}

function setEmail()
{
	try{
		var email = getFldValue("EMAIL_TEMP")+";"+getFldValue("EMAIL_SUBJECT");

		setFldValue("EMAIL_SUBJECT",email);
		setFldValue("EMAIL_TEMP",email);

	}
	catch(e){
		showExcpt("IMCL_DirectPayment_Function", e);
	}
}

function SYT_convNumToStr_Ind(event) {
    try {
		var NumVal = event.target.value;
			var num = parseInt(NumVal);
			var dec = NumVal.toString().split(".")[1];
		
			var single = ["Zero", "One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine"];
			var double = ["Ten", "Eleven", "Twelve", "Thirteen", "Fourteen", "Fifteen", "Sixteen", "Seventeen", "Eighteen", "Nineteen"];
			var tens = ["", "Ten", "Twenty", "Thirty", "Forty", "Fifty", "Sixty", "Seventy", "Eighty", "Ninety"];
		
		
			var res = "";
			var index = 0;
			var digit = 0;
			var next = 0;
			var words = [];
			if (num += "", isNaN(parseInt(num))) {
				res = "";
			} else if (parseInt(num) > 0 && num.length <= 18) {
				for (index = num.length - 1; index >= 0; index--)
					switch (digit = num[index] - 0, next = index > 0 ? num[index - 1] - 0 : 0, num.length - index - 1) {
						case 0:
							words.push(formatOther(digit, next, ""));
							break;
						case 1:
							words.push(formatTenth(digit, num[index + 1]));
							break;
						case 2:
							words.push(0 != digit ? " " + single[digit] + " Hundred" + (0 != num[index + 1] && 0 != num[index + 2] ? " and" : "") : "");
							break;
						case 3:
							words.push(formatOther(digit, next, "Thousand"));
							break;
						case 4:
							words.push(formatTenth(digit, num[index + 1]));
							break;
						case 5:
							words.push(formatOther(digit, next, "Lakh"));
							break;
						case 6:
							words.push(formatTenth(digit, num[index + 1]));
							break;
						case 7:
							words.push(formatOther(digit, next, "Crore"));
							break;
						case 8:
							words.push(formatTenth(digit, num[index + 1]));
							break;
						case 9:
							words.push(0 != digit ? " " + single[digit] + " Hundred" + (0 != num[index + 1] || 0 != num[index + 2] ? " and" : " Crore") : "")
							break;
						case 10:
							words.push(formatOther(digit, next, "Thousand") + (0 != num[index + 1] || 0 != num[index + 2] || 0 != num[index + 3] ? "" : " Crore"));
							break;
						case 11:
							words.push(formatTenth(digit, num[index + 1]));
							break;
						case 12:
							words.push(formatOther(digit, next, "Lakh"));
							break;
						case 13:
							words.push(formatTenth(digit, num[index + 1]));
							break;
						case 14:
							words.push(0 != digit ? " " + single[digit] + " Hundred" + (0 != num[index + 1] || 0 != num[index + 2] ? " and" : " Lakh") : "")
							break;
						case 15:
							words.push(formatOther(digit, next, "Thousand") + (0 != num[index + 1] || 0 != num[index + 2] || 0 != num[index + 3] ? "" : " Lakh"));
							break;
						case 16:
							words.push(formatTenth(digit, num[index + 1]));
							break;
						case 17:
							words.push(0 != digit ? " " + single[digit] + " Hundred" + (0 != num[index + 1] || 0 != num[index + 2] ? " and" : " Thousand") : "")
							break;
					};
				
				if(SYS_MODULE_NAME=="IMCL"){
					res = document.MAINFORM.LC_CCY.value+ " - "+words.reverse().join("");
				}
				else{
				res = "Rupees" + words.reverse().join("");
				}
				
			} else res = "";
		
			var decRes = "";
			if (dec != undefined && dec != null) {
		
				index = 0;
				digit = 0;
				next = 0;
				words = [];
				dec = (dec.length == 1 ? dec + "0" : dec);
				if (dec += "", isNaN(parseInt(dec))) {
					decRes = "";
				} else if (parseInt(dec) > 0 && dec.length <= 18) {
					for (index = dec.length - 1; index >= 0; index--)
						switch (digit = dec[index] - 0, next = index > 0 ? dec[index - 1] - 0 : 0, dec.length - index - 1) {
							case 0:
								words.push(formatOther(digit, next, ""));
								break;
							case 1:
								words.push(formatTenth(digit, dec[index + 1]));
								break;
						};
					
					decRes = "Paise" + words.reverse().join("");
				} else decRes = "";
			}
		
			return document.getElementById('COLL_AMT_WORDS').value = res + " " + decRes;
			console.log(res + " " + decRes);
			document.getElementById('COLL_AMT_WORDS').value = res + " " + decRes;
    } catch (e) {
        DisExcpt("TrxSys.js*SYT_convNumToStr_Ind", e);
    }
	
}

function formatTenth(digit, prev) {
    try {
        var double = ["Ten", "Eleven", "Twelve", "Thirteen", "Fourteen", "Fifteen", "Sixteen", "Seventeen", "Eighteen", "Nineteen"];
        var tens = ["", "Ten", "Twenty", "Thirty", "Forty", "Fifty", "Sixty", "Seventy", "Eighty", "Ninety"];
        return 0 == digit ? "" : " " + (1 == digit ? double[prev] : tens[digit]);
    } catch (e) {
        DisExcpt("TrxSys.js*formatTenth", e);
    }
}

function formatOther(digit, next, denom) {
    try {
        var single = ["Zero", "One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine"];
        return (0 != digit && 1 != next ? " " + single[digit] : "") + (0 != next || digit > 0 ? " " + denom : "");
    } catch (e) {
        DisExcpt("TrxSys.js*formatOther", e);
    }
}


function SYT_convNumToStr_Foreign(NumVal,CCY) {
    try {
        var num = NumVal.toString().split(".")[0];
        var dec = NumVal.toString().split(".")[1];
		var Currency = ["AED","AFN","ANG","ARS","AUD","BRL","CAD","CHF","CNY","DKK","DZD","EGP","EUR","GBP","GHC","GHS","HKD","ILS","INR","IQD","IRR","JMD","JOD","JPY","KES","KPW","KRW","KWD","LYD","MXN","MAD","MUR","NGN","NZD","PEN","PHP","PYG","QAR","RON","RSD","RUB","RWF","SAR","SDG","SEK","SGD","SHP","SYP","THB","TND","TRY","TWD","UGX","USD","VES","XAF","XCD","XOF","XPF","YER","ZAR"]

		var Rup = ["United Arab Emirates dirham","Afghan afghani","Netherlands Antillean guilder","Argentine peso","Australian dollar","real","Canadian dollar","Swiss franc","yuan","Danish krone","Algerian dinar","Egyptian pound","Euro","Pound","Ghana Cedi","Ghana Cedi","Hong Kong dollar","Israeli new shekel","Indian rupee","Iraqi dinar","Iranian rial","Jamaican dollar","Jordanian dinar","Japanese yen","Kenyan shilling","North Korean won","South Korean won","Kuwaiti dinar","Libyan dinar","Mexican peso","Moroccan dirham","Rupee","Naira","New Zealand dollar","Peruvian sol","Philippine peso","Paraguayan guaraní","Qatari riyal","Romanian leu","Serbian dinar","Russian ruble","Rwandan franc","Saudi riyal","Sudanese pound","Swedish krona","Singapore dollar","Saint Helena pound","Syrian pound","Thai baht","Tunisian dinar","Turkish lira","New Taiwan dollar","Ugandan shilling","US Dollar","Venezuelan bolívar soberano","Central African CFA franc","Eastern Caribbean dollar","West African CFA franc","CFP franc","Yemeni rial","South African rand"]

		var Ps = ["Fils","Pul","Cent","Centavo","Cent","Centavo","Cent","Rappen","Fen","Øre","Santeem","Piastre","Cent","Penny","Pesewa","Pesewa","Cent","Agora","Paisa","Fils","Dinar","Cent","Piastre","Sen","Cent","Chon","Jeon","Fils","Dirham","Centavo","Centime","Cent","Kobo","Cent","Céntimo","Sentimo","Céntimo","Dirham","Ban","Para","Kopek","Centime","Halala","Piastre","Öre","Cent","Penny","Piastre","Satang","Millime","Kuru¿","Cent","Cent","Cent","Céntimo","Centime","Cent","Centime","Centime","Fils","Cent"]
		
		for(var i=0; i<Currency.length; i++){
			if(Currency[i] == CCY){
				var C_AMT_NM = Rup[i];
                var C_DECI_NM = Ps[i];
				break;
			}
		}
				if(typeof C_AMT_NM == "undefined"){
					C_AMT_NM = "";
				}
				if(typeof C_DECI_NM == "undefined"){
					C_DECI_NM = "";
				}

		
		var MainAmtWord = AmountInWordsMillion(num).trim();
		var DeciAmtWord = dec!=undefined?AmountInWordsMillion(dec).trim():"";
		console.log(DeciAmtWord!="" ? MainAmtWord+" "+C_AMT_NM+" "+DeciAmtWord+" "+C_DECI_NM : MainAmtWord+" "+C_AMT_NM);
		return document.getElementById('COLL_AMT_WORDS').value = DeciAmtWord!="" ? MainAmtWord+" "+C_AMT_NM+" "+DeciAmtWord+" "+C_DECI_NM : MainAmtWord+" "+C_AMT_NM;
		
	} catch (e) {
        DisExcpt("TrxSys.js*SYT_convNumToStr_Foreign", e);
    }
}

function AmountInWordsMillion(number) {
	try {

		var digits = number.split('');
		while (digits.length % 3 !== 0) {
			digits.unshift('0');
		}
	
		var digitsGroup = [];
		var numberOfGroups = digits.length / 3;
		for (var i = 0; i < numberOfGroups; i++) {
			digitsGroup[i] = digits.splice(0, 3);
		}
	
		
		var digitsGroupLen = digitsGroup.length;
		var numTxt = [
			[null, 'One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine'], //hundreds
			[null, 'Ten', 'Twenty ', 'Thirty ', 'Forty ', 'Fifty ', 'Sixty ', 'Seventy ', 'Eighty ', 'Ninety '], //tens
			[null, 'One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine'] //ones
			];
		var tenthsDifferent = ['Ten', 'Eleven', 'Twelve', 'Thirteen', 'Fourteen', 'Fifteen', 'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'];
	
		
		for (var j = 0; j < digitsGroupLen; j++) {
			for (var k = 0; k < 3; k++) {
				var currentValue = digitsGroup[j][k];
				digitsGroup[j][k] = numTxt[k][currentValue];
				if (k === 0 && currentValue !== '0') { 
					digitsGroup[j][k] += ' Hundred ';
				} else if (k === 1 && currentValue === '1') { 
					digitsGroup[j][k] = tenthsDifferent[digitsGroup[j][2]];
					digitsGroup[j][2] = 0;
				}
			}
		}
	
	
		for (var l = 0; l < digitsGroupLen; l++) {
			
			digitsGroup[l] = digitsGroup[l].join('').trim();
		}
	
		var posfix = [null, 'Thousand', 'Million', 'Billion', 'Trillion', 'Quadrillion', 'Quintillion', 'Sextillion'];
		if (digitsGroupLen > 1) {
			var posfixRange = posfix.splice(0, digitsGroupLen).reverse();
			for (var m = 0; m < digitsGroupLen - 1; m++) { 
				if (digitsGroup[m]) {
					digitsGroup[m] += ' ' + posfixRange[m];
				}
			}
		}
	
		
		return digitsGroup.join(' ');
	}
	catch (e) {
        DisExcpt("TrxSys.js*AmountInWordsMillion", e);
    }
}

function replaceComma(){

	var amt = getFldValue("COLL_AMT");
	if(amt.includes(",")){
		amt = amt.replace(/,/g,"");
	}
	if(amt==0){
		amt="";
	}
	setFldValue("COLL_AMT", amt);
}

function NumberConv(){
	
	var amt = getFldValue("COLL_AMT");
	var x =  new Intl.NumberFormat('en-IN',{minimumFractionDigits:2}).format(amt);

	document.getElementById("COLL_AMT").value=x;

}

function setEmailSubject()
{
	try{
		var email = getFldValue("EMAIL_TEMP");
		var BranchCode = getFldValue("HOME_BRANCH_CODE");
		var cpcCode=getFldValue("CPC_CODE");
		if(BranchCode!=cpcCode)
		{
		setFldValue("EMAIL_SUBJECT",email);
		}
	}
	catch(e){
		showExcpt("IMCL_DirectPayment_Function", e);
	}
}


function doPageInit(){

	console.log("doPageInit starts");
	refreshDO(1);
	/*rearrangeDo('GOLD_WEIGHT','H_div');
	rearrangeDo('EEFC_CCY3','I_div');*/
	$("#B_CONTENT").css("background-color","#e4e4e4");
	
  var C_MAIN_REF=getFldValue("C_MAIN_REF");
			
			$.ajax({
	url: '../servlets/LodgeActiveStatus',
		type: 'get',
		async : false,
		dataType : 'json',
		data : {refNumber : C_MAIN_REF},
		success: function(responseText)
		{		
		
		
		var pre=responseText.split("$");
		var status=pre[0];
		var lastAction=pre[1];
		
			$("#C_TRX_STATUS").val(status);
			  $("#LastAction").val(lastAction);
			
		},
		error: function(err){
			console.log("Error STAUS"+err);
		}
		}); 
		
		setTimeout("checkMandatoryFieldsForSections();",500)
		
		$('#TrxSysBtnsDiv').hide();
		$('#TrxTabs').hide();
		$('#paymentButton').css('background-color','white');
	    $('#paymentButton').css('color','#5b1d8d');
	    $('#paymentButton').css('border-right','1px solid white');
		
		
	
		
		
		
   
	
	if(ITEM_ID!="ModifyTrx" || sessionStorage.getItem('draftFlag')=='P' || sessionStorage.getItem('draftFlagset')=='P') {
			sessionStorage.setItem('EditFlag','N')
			{
				$(".subbacbutton").hide();
				$("#activepasttab").hide();
			}
			sessionStorage.setItem('draftFlagset','');
		} 
        $("#confirmButtonid").hide();
//FOR CHECKER
  if(sessionStorage.getItem('role')=='C'){
  debugger;
		$("#TrxSysBtnsDiv1").hide();
		$("#TrxSysBtnsDivChecker").show();
		
		 $("#releaseTab, #COMMENT_BTN, #sec_cancel, #btnMaker, #SavedActTrx, #save_tab").hide();
		
        $('#authLCButton1').removeAttr('disabled');
		$('#unlockLCButton').removeAttr('disabled');
		$('#viewLCButton1').removeAttr('disabled');
		$('.prim_release').removeAttr('disabled');  
		$('.sec_cancel').attr('disabled',false);  
		$('.auth_button').attr('disabled',false);  
       
		$("#btnChecker").show();
		  $('#Viewdocs').show();
		
			
			
		
			   
					if(sessionStorage.getItem('AuthStatus')=='Auth')
					{
					$("input[name=REJECT]").show();
					}
					else if(sessionStorage.getItem('AuthStatus')=='Rej')
					{
					$("input[name=AUTHORISE]").show();
					}
		           if($("#APPL_ID").val().indexOf("00000080875812998") ==0){
		            insertCommentsOnAuth("s");
		            $("#issueLcIdTd").addClass(' star');
		            $("#C_AUDIT_COMMENTR").removeAttr("readonly");
		            if (document.getElementById("CASE_ID")){
			         $("#CASE_ID").removeAttr("readonly");
		             }
			         if (document.getElementById("C_DROP_DOWN")){
				     $("#C_DROP_DOWN").removeAttr("disabled");
			         }
		             }
                     if($("#APPL_ID").val().indexOf("00000080875812998") ==-1){
		             $("#issueLcId").css("display","none");
		             }
			
	//View and manage in checker
		if(sessionStorage.getItem('EditFlag')=='Y'  )
		{
		     $('.sec_cancel').hide();
		     disableAllFields('outwardAcptDiv');
			 $("#backButtonid").attr("disabled",false);     
		     $('#viewLCButton1').css('background-color','white');
	         $('#viewLCButton1').css('color','#5b1d8d');
	         $('#viewLCButton1').css('border-right','1px solid white');
			 $('#authLCButton').css('background-color','');
	         $('#authLCButton').css('color','');
	         $('#authLCButton').css('border-right','1px solid white');
			 $("#tdconfirmChecker").hide();	
			 $("#btnChecker").css("display","none");
			 $("#btnMaker").hide();
			 $("#btnChecker").show();
			 $("#deleteTab").hide();
			 $('#SavedActTrx').show();
				$('#Viewdocs').hide();
			 $("#editid").hide();
			 $("#editspan").hide();
			 $(".rejectdiv").hide();
			 $("#expportAsid").show();
			 $("#expportAsid1").show();
			 $(".subbacbutton").show();
			 $("#submitButtonid").hide();
			 $("#confirmButtonid").hide();
			 /* UI/UX Changes*/
			checkMandatoryFieldsForSections();
			
		
		}	
 }
	
if(sessionStorage.getItem('role')=='M'){
		//document.getElementById("COLL_BILL_DT").value = parent.document.getElementById("TRX_DT").value;
		$("#TrxSysBtnsDivChecker").hide();
		$("#btnChecker").hide();
		$("#TrxSysBtnsDiv1").show();
		$('#SavedActTrx').hide();
		 $('#Viewdocs').show();
	
		$("#btnMaker").show();
		
		setTimeout(function(){
			 if(sessionStorage.getItem('EditFlag')=='N' ){
			
			
		 rearrangeDo('GOLD_WEIGHT','H_div');
		rearrangeDo('READY_AMT1','I_div');
		
	}
	},300);
	
	
		
//For saved transaction(active transaction)
	
	if(sessionStorage.getItem('EditFlag')=='Y' && sessionStorage.getItem('draftFlag')!='P'){
	     
		    enabledFlag=false;
			disableAllFields('outwardAcptDiv');
		    $("#backButtonid").attr("disabled",false);
            $('.sec_cancel').hide();
			$('#tdconfirmChecker').hide();
			$(".search").attr("disabled",true); 
			$('#SavedActTrx').show();
			$('#Viewdocs').hide();
		    $("#expportAsid").attr("disabled",false);
	         $("#submitButtonid").attr("disabled",true);
			$("#prim_next").hide();
			$('#prim_save').hide();
			$("#submitButtonid").show();
			$("#TrxSysBtnsDiv1").hide();	
			$("#btnMaker").show();			
			$("#buttonContainer").hide();
			$('#tabsForChecker').hide();
			$('#viewLCButton').css('background-color','white');
	         $('#viewLCButton').css('color','#5b1d8d');
	         $('#viewLCButton').css('border-right','1px solid white');
			$('#paymentButton').css('background-color','');
	        $('#paymentButton').css('color','');
	        $('#paymentButton').css('border-right','');
		
	
			
		 
		
		
		
			var C_MAIN_REF=getFldValue("C_MAIN_REF");
			var moduleProductCode=PRODUCT_ID;			
			$.ajax({
	        url: '../servlets/ActiveStatus',
		    type: 'get',
		    async : false,
		dataType : 'json',
		data : {refNumber : C_MAIN_REF,moduleProductCode : moduleProductCode},
		success: function(responseText)
		{				
		var pre=responseText.split("$");
		var status=pre[0];
		var lastAction=pre[1];
		
			$("#C_TRX_STATUS").val(status);
			  $("#LastAction").val(lastAction);		
		},
		error: function(err){
			console.log("Error STAUS"+err);
		}
		});
		var s=$("#C_TRX_STATUS").val();
			var status="";
			if(s=='A')
			{
			status="Rejected by Bank";
			
			$("#editspan").hide();
			$("#editid").hide();
			
			}
			else if (s=='B')
			{
			status="Pending Bank Authorisation";
			
			$("#editspan").hide();
			$("#editid").hide();
			
			}else if (s=='C')
			{
			status="Processed";
			
			$("#editspan").hide();
			$("#editid").hide();
			
			}
			else if (s=='D')
			{
			status="Incomplete";
			
			$("#editspan").hide();
			$("#editid").hide();
			
			}
			else if (s=='E')
			{
			status="Modification";
			
			$("#editspan").hide();
			$("#editid").hide();
			
			}
           else if (s=='J')
			{
			
			status="Rejected by Customer Checker";
			
			$("#editspan").hide();
			$("#editid").hide();
			
			}
           else if (s=='M')
			{
			status="Authorised";
			
			$("#editspan").hide();
			$("#editid").hide();
			
			}
			else if (s=='P')
			{
			status="Pending with Customer Checker";
			}
			else if (s=='R')
			{
			status="Rejected by Customer Checker";
			}
			else if (s=='S')
			{
			status="Pending with Bank";
			$("#editspan").hide();
			$("#editid").hide();
			}
			else if (s=='T')
			{
			status="Pending with Customer Checker";
			}
			else if (s=='Z')
			{
			status="Saved as Draft";
			}
			if(s=='A')
			{
				$("#makerrejreason").val(getFldValue("NOTES"));
			}else{
			$("#makerrejreason").val($("input[name='C_REFUSE_REASON']").val());
			}
			$("#makerrejstatus").val(status);
			
		}

		
	}	
	if(FUNC_ID != ''){

		setFldValue("TEMP_ORG_FUNC_ID", FUNC_ID);

		}
		
		
		if(SYS_FUNCTION_SHORT_NAME == 'IMCL_Inq'){
		enabledFlag=false;
		sessionStorage.setItem('EditFlag','Y');
			disableAllFields('outwardAcptDiv');
			setFldValue('REASON_NONPAY_ACPT_TEMP',getFldValue('REASON_NONPAY_ACPT'))
		 ACCPT_BILL_OnChange();
		 setFldValue('REASON_NONPAY_ACPT',getFldValue('REASON_NONPAY_ACPT_TEMP'))
		 document.getElementById('checkBox1').checked = true;
		 document.getElementById('DECL_CHCK').value = 'yes';
		 $('#NEXT_BT').hide();
		 $('#tdconfirmChecker').hide();
		 $('#tdcancelChecker').find('input').removeAttr('disabled');
		 $('#sec_cancel').removeAttr('disabled')
		 
		}
}

//DIRECT SUBMITTING ACCEPT TRX
function hideFields() {
    	if(sessionStorage.getItem('AcceptDirect')=='Y'){
        setFldValue("STATUS","7");		
        setFldValue("ACPT_REJ","3");
        setFldValue("ACCPT_BILL","3");		
        setFldValue("ETRADE_FLAG","1");			
		$('.tabContainer').hide();
		$('#outwardAcptDiv').hide();
		$('#mainTab').hide();
		$('#party').hide();
		
		$('#prim_confirm').attr('onclick','ConfirmTransactionAccept()');
		$('#prim_confirm').trigger("click");
		sessionStorage.setItem('AcceptDirect','');	
		}
		else{
		$('#outwardAcptDiv').show();
	    $('.tabContainer').show();
		$('#mainTab').show();
		$('#parties').show();
		$('#party').show();
		}
}



function submitTab(){
 debugger;
 if( checkMandatoryFieldsAll()  && chkDataFmt() )
{
	
/*if(!undertakingsTick() ){

		alert("Please accept Terms&Conditions");
		$('#mainTab').trigger("click");
		return false;
	}*/


	
	if(!isCancel){
				var myWindow=openWin("../Default/SCRN/IMCL_Directpay_PreviewPage.jsp?","width=100","height=100","fullscreen='yes'");
				myWindow.resizeTo("2000","2000");
				myWindow.focus();
				return true;
	}
	}

else
{
alert("Fill Mandatory Fields!");
$('#prim_confirm').hide();
return false;
}
}



function undertakingsTick()
{
if( (document.getElementById('checkBox1').checked) || (document.getElementById('checkBox2').checked)  )
{
	return true;
}
else
{ 

    return false;
}
}




/*function checkRadioBtnMandatory(){
var partialShip = "";
if(document.getElementById('yesCheck').checked || document.getElementById('noCheck').checked){
		partialShip = "value";
		$('#error_O_partialShip').hide();
		$('#partialShipError').val("");
	}
      if( partialShip!="" ){
		return true;
	}
	else if(partialShip==""){
		$('#error_O_partialShip').show();
        var error="Please select Bill Acceptance";
		$('#partialShipError').val(error);
		
		if($('#mainTab').attr('class') != 'accordion active'){
			$('#mainTab').trigger("click");
		}
		$('html,body').animate({scrollTop:$("#yesCheck").position().top},'slow');
		return false;
	}
}*/
//To edit the saveTrx
function enablefields(){
	
   /* UI/UX Changes*/
    /*$("textarea").attr("disabled",false); 
	$("input").attr("disabled",false);
	$("select").attr("disabled",false); 
	$(".search").attr("disabled",false); */
	 $("textarea:not(.CHAR_P):not(.AMT_P):not(.INT_P):not(.DATE_P)").attr("disabled", false);

    $("input:not(.CHAR_P):not(.AMT_P):not(.INT_P):not(.DATE_P)").attr("disabled", false);

    $("select:not(.CHAR_P):not(.AMT_P):not(.INT_P):not(.DATE_P)").attr("disabled", false);
	/* UI/UX Changes*/
	$("#submitButtonid").attr("disabled",false);	
		enabledFlag=true;
	$("#makerrejstatus").prop("disabled",true);
	$("#makerrejreason").prop("disabled",true);
	
}


function savedTrxSubmit()
  {
	if(checkRadioBtnMandatory()){
if(((document.getElementById('noCheck').checked) == true) &&( ((document.getElementById('hold').checked) == false) && ((document.getElementById('return').checked) == false) )){
		
		alert("Please select Disposal of Document");
		if($('#mainTab').attr('class') != 'accordion active'){
			$('#mainTab').trigger("click");
		}
		$('html,body').animate({scrollTop:$("#hold").position().top},'slow');
		return false;
	}
else if(!undertakingsTick() ){

		alert("Please accept Terms&Conditions");
		$('#mainTab').trigger("click");
		return false;
	}
	
		enabledFlag=false;

		$("#submitButtonid").hide();
		$("#confirmButtonid").show();
		$("textarea").attr("disabled",true); 
		$("input").attr("disabled",true);
		$("select").attr("disabled",true); 
		$(".search").attr("disabled",true);
		$(".editbtn").hide();
		$("#viewAndManageEdits").hide();	
		$("#expportAsid").hide();
		$("#abc").hide();
		$("#vmPreview1").show();
		$("#containerpreview").hide();
		$("#confirmButtonid").attr("disabled",false); 
	}

	else
	{
	alert("Fill Mandatory Fields!");
	return false;
	}
	
 }


//For Authorization SCRN

function RejectConfirm() 
{
var r=$('#C_MAIN_REF').val();
	sessionStorage.setItem('MainRef',r);
	sessionStorage.setItem('sucessmsg','IMPLCREJA');
RejectCheckerConfirm();
}

function ReleasEConfirm()
{
    var oMainForm = document.forms["MAINFORM"];
	var nEelement = oMainForm.elements.length;
	var oField = null;
	var sFldNm = "";
	var sDataType = "";
	var sFldType = "";
	var sFldValue = "";
	var sFldTitle = "";
	var sErrMsg = "Comment";
	var r=$('#C_MAIN_REF').val();
	sessionStorage.setItem('ImclPmtRef',r);
	sessionStorage.setItem('sucessmsg','IMCLAuthPmt');
	if($("#APPL_ID").val().indexOf("00000080875812998") !=-1){
		if (document.getElementById("C_AUDIT_COMMENTR")){
			if (document.getElementById("C_AUDIT_COMMENTR").value =="" && document.getElementById("C_AUDIT_COMMENTR").value.length!=4){
				alert("Please Enter Authorizing Comments");
                      for (var i = 0; i < nEelement; i++) {
					    oField = oMainForm.elements[i];
					    sFldNm = oField.id;
						sDataType = getFldDataType(sFldNm);
						sFldType = getFldType(sFldNm);
						FldValue = getFldValue(sFldNm);
						sFldTitle = getFldTitle(sFldNm);
						sCharSet = oField.charset;
					    if(sErrMsg.includes("Comment"))
						{
						$('#C_AUDIT_COMMENTR').css("border-color","#ff0000");
						$('html,body').animate({scrollTop:$("#C_AUDIT_COMMENTR").position().top},'slow');
						$('#C_AUDIT_COMMENTR').focus();
						return false;
						}
					}
				return false;
			}
		}
		if(authLevelPCDA=='2'){
			var caseid =  document.getElementById("CASE_ID").value;
			if (document.getElementById("CASE_ID")){
				if ((caseid =="" || caseid=='0') || ((caseid.length <4 || caseid.length >8))){
					alert("Case ID length between Four to Eight digit. Please Enter Case ID");
					return false;
				}
			}
		}
		if (document.getElementById("C_DROP_DOWN")){
			var cDropDownPcda =  document.getElementById("C_DROP_DOWN").value; 		
			if(cDropDownPcda=="" || cDropDownPcda=="undefined"){
				alert("Please select Accept/Reject");
			}
		}
	}
	ReleaseCheckerConfirm();
}


function cancelRejectYes(){
	$('#rejectAuthorise').hide();
	$('.backdropReject').hide();
	$("#makerrejreason").removeAttr("disabled");


	checkerRejection();
	var r=$('#C_MAIN_REF').val();
	sessionStorage.setItem('IMCLRefRej',r);
	sessionStorage.setItem('sucessmsg','IMCLReject');
}
function cancelRejectNo(){
	$('#rejectAuthorise').hide();
	$('.backdropReject').hide();
}

function showRejectBox(){
	$('#rejectAuthorise').show();
	$("#C_REFUSE").attr("readonly",false);
	$('.backdropReject').show();
}

function showConfirmBox(){
	$('#confirmAuthorise').show();
	$('.backdropAuthorise').show();
}

function cancelAuthoriseYes(){
	$('#confirmAuthorise').hide();
	$('.backdropAuthorise').hide();
		if(insertCommentsOnAuth("u")){
			alert("Please submit the signed/acknowledged bill of exchange to the branch for processing your request");
		checkerAuthorise();	
	}else{
		alert("Please retry");
	}
}

function cancelAuthoriseNo(){
	$('#confirmAuthorise').hide();
	$('.backdropAuthorise').hide();
}

function deleteDocument(){

$('#confirmDocDelete').hide();
$('.backdropDelete').hide();
callDeleteDMSAPI(docIdforDelete);
}

function deleteDocumentCancle(){
$('#confirmDocDelete').hide();
$('.backdropDelete').hide();

}


setTimeout(function()
	{
	  $("#C_REFUSE").attr("readonly",false);
	},600);
	
	
var pcdsCom;
function insertCommentsOnAuth(fetchType){
   	var resultFlag = true;
   	
   	var u = encodeUrl("../servlets/insertCommentinChecker");
   	
   	if(fetchType=="u"){
   		if($('#C_AUDIT_COMMENTR').val().indexOf(pcdsCom) == -1){
   			var cac = $('#C_AUDIT_COMMENTR').val();
   			var updatedComment = pcdsCom+" "+ cac;
   			
   			$('#C_AUDIT_COMMENTR').val(updatedComment);
   		}
   	}
   	var csrfObj = csrfResolution('../servlets/insertCommentinChecker');
   	$.ajax({
   	url : csrfObj.url,
   	type: 'post',
   	async : false,
   	data:{'C_AUDIT_COMMENTS':$("#C_AUDIT_COMMENTR").val(),'CASE_ID':$("#CASE_ID").val(),'C_MAIN_REF':$("#C_MAIN_REF").val(),'fetchType':fetchType,CSRFTOKEN : csrfObj.csrf,REFRESH_TOKEN : csrfObj.refreshToken},
   	
   	success: function(res){
   	if(fetchType=="s"){
   	pcdsCom=res;
   	$('#C_AUDIT_COMMENTR').val(res);
   	
   	}	
   	},
   	error: function(err){
   		
   		resultFlag = false;
   		
   	}
   	});
   	return resultFlag;
   }	




/*
function acceptReject(){
	if ((document.getElementById('yesCheck').checked) == true){
	$("#disposaldoc").hide();
	$("#DOC_DISPOSAL").hide();
	$("#accptAmt").show();	
	$("#ACPT_AMT").show();	
	  enableFld("ACPT_AMT","M");
	document.getElementById('firstcheckbox').style.display="block";
	document.getElementById('firstcheckbox1').style.display="block";
	document.getElementById('secondcheckbox').style.display="none";
	document.getElementById('secondcheckbox1').style.display="none";
	setFldValue("ACPT_REJ","3");
	setFldValue("REASON_NONPAY_ACPT","");
		acceptrejectstatus();
	}else if ((document.getElementById('noCheck').checked) == true){
	$("#disposaldoc").show();	
	$("#DOC_DISPOSAL").show();	
	$("#accptAmt").hide();
	$("#ACPT_AMT").hide();
		document.getElementById('firstcheckbox').style.display="none";
		document.getElementById('firstcheckbox1').style.display="none";
		document.getElementById('secondcheckbox').style.display="block";
		document.getElementById('secondcheckbox1').style.display="block";
		setFldValue("ACPT_REJ","4");
		setFldValue("REASON_NONPAY_ACPT","");
		acceptrejectstatus();
	}
}
*/




function specialChar(b){
	
		
			var id=b.value;
			let regex=/^[a-zA-Z0-9]+$/;
			if(regex.test(id)){
          return id;
		  }
		  else{
		  b.value='';
		}
	
}



function checkAllMandatoryFields() {
        let allDivsFilled = true;

        // Iterate over all divs that have mandatory fields
        $('div[id$="_div"]').each(function () {
            const divId = $(this).attr('id');

            // Check if the div contains mandatory fields and ensure they're filled
            if ($(this).find('.DATE_M, .CHAR_M, .INT_M, .AMT_M').length > 0) {
                const divFilled = checkMandatoryFieldsForDiv(divId);
                if (!divFilled) {
                    allDivsFilled = false;  // If any div is not fully filled, set this flag to false
                }
            }
        });

        // Show the submit button (PRE_BT) if all mandatory fields in all divs are filled
        if (allDivsFilled) {
            $('#PRE_BT').show();
            $('#NEXT_BT').hide();  // Hide the next button
        } else {
            $('#PRE_BT').hide();
        }
    }
	
	 function checkMandatoryFieldsForDiv(divid) {
        let allFilled = true;
        const div = $(`#${divid}`);
         div.find('.DATE_M, .CHAR_M, .INT_M, .AMT_M').each(function () {
            if ($(this).val() === "" || $(this).val() == null || $(this).val() === 0) {
                allFilled = false;  // Mark as false if any mandatory field is empty or null
            }
        }); 
        if (allFilled) {
            div.find('.tick-icon').show();
            div.find('.number-circle').hide();
        } else {
            div.find('.tick-icon').hide();
            div.find('.number-circle').show();
        }

        return allFilled;
    }
	
function checkMandatoryFieldsAll() {
	return true;
} 

// Function to check mandatory fields for each section
function checkMandatoryFieldsForSections() {
	 
        sections.forEach(section => {
            let allFieldsFilled = true;

            const div = $(`#${section.divid}`);

            div.find('.DATE_M, .CHAR_M, .INT_M ,.AMT_M').each(function () {
                if ($(this).val() === "" || $(this).val() === 0|| $(this).val() === '0' ) {
                    allFieldsFilled = false;
                    $(`#${section.id}_warning`).show(); // Show warning if any field is empty
                } else {
                    $(`#${section.id}_warning`).hide(); // Hide warning if all fields are filled
                    div.find('.number-circle').hide();
                }
            });
			
			 div.find('.AMT_M').each(function () {
                if ($(this).val() === 0 || $(this).val() === "") {
                    allFieldsFilled = false;
                    $(`#${section.id}_warning`).show(); // Show warning if any field is empty
                } else {
                    $(`#${section.id}_warning`).hide(); // Hide warning if all fields are filled
                    div.find('.number-circle').hide();
                }
            });

            // Show or hide the tick icon based on the validation result
            if (allFieldsFilled) {
                $(`#${section.tickId}`).show(); // Show the tick icon
                $(`#${section.numberId}`).hide();
            } else {
                $(`#${section.tickId}`).hide(); // Hide the tick icon
                $(`#${section.numberId}`).show();
            }
			
				
        });
		
		updateStepperProgress();
    }

//NEW	
function emailValidation(){
		 try {
		
      var email = document.MAINFORM.EMAIL_ADD2.value;
      var emailfilter = /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z]{2,}$/;
	  var isValidEmail = emailfilter.test(email);
	  if (isValidEmail){
		return true;
	  }else{
		alert("Please enter a valid email address.");
		document.MAINFORM.EMAIL_ADD2.value = '';
		return false;
	  }
	  }catch (e) {
        DisExcpt("IMCL_DirectPayment_Function.js", e);
    }
    }
	
	
function validateNumberCust() {
	 var number=document.getElementById('CUST_CONTACT').value;
	 
	
	  const regex= /^[6-9]\d{9}$/;
	  var result=  regex.test(number);
	  if(!result){
	    alert('Please enter valid contact number');
		 setFldValue("CUST_CONTACT", "");
	   setFldValue("CUST_CONTACT", "");
	}else if (number.length > 0 && number.length >= '0' && number.length<= '6'){
			alert('Please enter valid contact number');
			  setFldValue("CUST_CONTACT", "");
	}else if(number.length > 0 && number.length!=10){
		alert('Please enter valid contact number');
		 setFldValue("CUST_CONTACT", "");
	}
	 else {
	    }
	}
	
	function validateMobileNumber(input) {
	      // Allow only digits and remove non-digit characters
	    input.value = input.value.replace(/\D/g, '');
		
	    // Check if the first digit is between 0 and 6
	    if (input.value.length > 0 && input.value[0] >= '0' && input.value[0] <= '6') {
	        input.value = '';
	       showMsg( "Please enter valid contact number ");
	        //validateAllMobileNumbers();
			 document.getElementById('CUST_CONTACT').value='';
		}else if(input.value.length>0 && input.value.length!=10){
			  showMsg(" Please enter valid contact number ");
	          document.getElementById('CUST_CONTACT').value='';
	    } 
	}
	
function IMCL_Coll_Type(){
	
	var coll_typ = getFldValue('COLL_TYPE');
	
	if(coll_typ == '1') {
		changeFieldClassNew('DAY_MON_FLG','P');
		changeFieldClassNew('DRWR_AC_NO1','M');
		document.getElementById("DRWR_AC_NO1").className  = 'FldLabel star'
		alert('Direct bills transaction permitted only for WOS, Status Holder Exporters, SEZ Units, 100% EOUs, PSUs and Limited Companies, Check and proceed');
	}else if(coll_typ == '2'){
		changeFieldClassNew('DAY_MON_FLG','P');
		changeFieldClassNew('DRWR_AC_NO1','M');
		document.getElementById("DRWR_AC_NO1").className = 'FldLabel'
		
	}
		changeFieldClassNew('DAY_MON_FLG','P');
		changeFieldClassNew('DRWR_AC_NO1','P');
}

function OtherDescription()
{
	try{
		var purpofimport = document.getElementById("PURP_OF_IMPORT").value;
		if(purpofimport == '8'){
			
			  changeFieldClassNew('OTHER_DESCP','M');
		}
		else{
			
			  changeFieldClassNew('OTHER_DESCP','P');
			 
		}
	}
	catch(e){
		showExcpt("IMCL_DirectPayment_Function", e);
	}
}

function GoldImport()
{
	try{
		var purpofimport = document.getElementById("PURP_OF_IMPORT").value;
		if(purpofimport == '1'){
			
			  changeFieldClassNew('GOLD_IMPORT','M');
		}
		else{
			
			  changeFieldClassNew('GOLD_IMPORT','P');
			 
		}
	}
	catch(e){
		showExcpt("IMCL_DirectPayment_Function", e);
	}
}

function TypeofImport(){
	
	var Imp_Typ = getFldValue('TYPE_OF_IMPORT');
	if(Imp_Typ == '3') {
		alert('Type of Import is selected as Merchanting Trade, Please upload relevant document required');
	}
}

function CollCcy(){
	document.getElementById("COLL_BILL_DT").value=document.getElementById("TRX_DT").value
	setFldValue("COLL_CCY1", getFldValue("COLL_CCY"));
	
}

function PaymentAmt(){

	
var CollAmt = parseInt(document.getElementById("COLL_AMT").value.replace(/,/g,''));
var PayAmt = parseInt(document.getElementById("DRWNG_AMT_COLL_CCY").value.replace(/,/g,''));

 if(PayAmt > CollAmt){
		setFldValue("DRWNG_AMT_COLL_CCY","");
		showMsg('Payment Amount Should Not be Greater Than  Bill Amount');
 }
else{
	setFldValue("DRWNG_AMT_COLL_CCY",PayAmt);
	}
	

}
function DebitAccNo(){
	alert('Please provide valid Operative Account which is already mapped to CIF');
	
	
}


function template_IMCLPayment(){
 debugger;
	AssignTemplateValue('U');
	CalIsFstTab();
	CalIsLastTab();	
	var tableTemp = 'ECD_TEMPLATE';
	var rootTemp = '../screen/SYS_Template.jsp&Clause_Name=T_CREA_BY&CTRL_TYPE=LOAD';
	try {
        var url = "../servlets/WSTrxManager?Search_Table=" + tableTemp + "&_PageInfo=" + rootTemp + "&_TRX_STATUS=TEMPLATE";

        var height = screen.availHeight - 500;
        var style = InfoList[2];
        if(typeof(style) == "undefined"){
        	style = new OpenWinStyle();
        	style.setScrollbars(true);
        	style.setStatus(true);
        	style.setWidth(800);
        	style.setHeight(600);
        	style.setLeft(250);
        	style.setTop(50);
        }
        
       
        openWin(url, "Child", style);
        SYS_SetTimeOutOfAutoSave();
    } catch (e) {
        DisExcpt("IMCL_DirectPayment_Function.jsp", e);
    }

 }

 function openTabCreateTemplate()
{

if( checkCustomValidations() && chkDataFmt() )
{
$("#IsLastTabNew").val("Y");
return true;
}
else
{
alert("Fill Mandatory Fields!");
$('#prim_confirm').hide();
return false;
}
}

 function AssignTemplateValue(value)
{
$("#createTemplate").val(value);

}

function saveAsDraft(){
//$('#prim_save').attr('onclick','SaveTransaction()');
	//$('#prim_save').click();
SaveTransaction();
}

function rearrangeDo(doTopDiv,doDiv) {
	var doTopDiv = document.getElementById(doTopDiv).parentElement.parentElement
	var doDiv = document.getElementById(doDiv)
	doTopDiv.appendChild(doDiv)
} 

