const fourColumnFields = [
  'FIELD1', 'FIELD2', 'FIELD3', 'FIELD4',
  'FIELD5', 'FIELD6', 'FIELD7', 'FIELD8'
];



// Check and render remaining 4-col fields if any
if (fourColBuffer.length > 0) {
    renderFourColumnRow(targetDiv, fourColBuffer);
    fourColBuffer = [];
}




if (fourColumnFields.includes($input.attr('id')) || fourColumnFields.includes($input.attr('name'))) {
    fourColBuffer.push({ label: $label, input: $input });

    if (fourColBuffer.length === 4) {
        renderFourColumnRow(targetDiv, fourColBuffer);
        fourColBuffer = [];
    }

    return; // Skip rest of the processing for this input
}




let fourColBuffer = [];




function renderFourColumnRow(container, fields) {
    const row = $('<div class="row-container four-column-row"></div>');

    fields.forEach(item => {
        const wrapper = $('<div class="field-wrapper four-col-field"></div>');
        const $label = $(item.label).addClass('label-inline');
        const $input = $(item.input).addClass('input-inline');
        wrapper.append($label).append($input);
        row.append(wrapper);
    });

    container.append(row);
}



.row-container.four-column-row {
    display: flex;
    flex-wrap: nowrap;
    justify-content: space-between;
    gap: 10px;
    margin-bottom: 10px;
}

.field-wrapper.four-col-field {
    width: 23%;
    display: flex;
    flex-direction: column;
}

.label-inline {
    font-weight: 500;
    margin-bottom: 2px;
    white-space: nowrap;
}

.input-inline {
    width: 100%;
    padding: 6px 8px;
    box-sizing: border-box;
}